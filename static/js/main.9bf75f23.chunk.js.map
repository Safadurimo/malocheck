{"version":3,"sources":["index.jsx","../../../src/malocheck/malocheck.js"],"names":["malocheck","require","Game","props","state","value","validity","messages","handleChange","bind","generateRandomMaloId","this","updateWithNewMaloId","maloID","res","checkMaloIdValid","setState","valid","event","target","validityElement","direction","spacing","Provider","color","size","component","alignItems","justifyContent","sx","fontSize","mt","variant","onClick","id","label","onChange","inputProps","inputMode","pattern","className","map","message","React","Component","ReactDOM","render","document","getElementById","berechnePZ","val","erste10Positionen","split","slice","c","filter","x","i","reduce","pv","cv","Number","Math","min","module","exports","test","isNumeric","push","messageCode","length","isLengthEleven","isErsteZiffer1bis9","pruefzifferKorrekt","isPruefzifferKorrekt","korrektePruefziffer","pruefziffer","random","a","b","floor","maloId"],"mappings":"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","file":"static/js/main.9bf75f23.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport { MdThumbUp, MdThumbDown } from \"react-icons/md\";\r\nimport { IconContext } from \"react-icons\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\nvar malocheck = require(\"malocheck\");\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      value: \"\",\r\n      validity: false,\r\n      messages: [],\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.generateRandomMaloId = this.generateRandomMaloId.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateWithNewMaloId(malocheck.generateRandomMaloId());\r\n  }\r\n\r\n  updateWithNewMaloId(maloID) {\r\n    let value = maloID;\r\n    let res = malocheck.checkMaloIdValid(value);\r\n    this.setState({\r\n      value: value,\r\n      validity: res.valid,\r\n      messages: res.messages,\r\n    });\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.updateWithNewMaloId(event.target.value);\r\n  }\r\n\r\n  generateRandomMaloId(event) {\r\n    this.updateWithNewMaloId(malocheck.generateRandomMaloId());\r\n  }\r\n\r\n  render() {\r\n    const messages = this.state.messages;\r\n\r\n    let validityElement;\r\n    if (this.state.validity) {\r\n      validityElement = (\r\n        <Stack direction=\"row\" spacing={2}>\r\n          <IconContext.Provider value={{ color: \"green\", size: \"50px\" }}>\r\n            <MdThumbUp />\r\n          </IconContext.Provider>\r\n          <Box\r\n            component=\"span\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            sx={{ fontSize: 16, mt: 1 }}\r\n          >\r\n            Die Malo - Id ist gültig.\r\n          </Box>\r\n        </Stack>\r\n      );\r\n    } else {\r\n      validityElement = (\r\n        <Stack direction=\"row\" spacing={2}>\r\n          <IconContext.Provider value={{ color: \"red\", size: \"50px\" }}>\r\n            <MdThumbDown />\r\n          </IconContext.Provider>\r\n          <Box\r\n            component=\"span\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            sx={{ fontSize: 16, mt: 1 }}\r\n          >\r\n            Die Malo - Id ist ungültig.\r\n          </Box>\r\n        </Stack>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Stack alignItems=\"center\" spacing={2}>\r\n        <div>\r\n          <Button variant=\"contained\" onClick={this.generateRandomMaloId}>\r\n            Zufällige Malo-Id generieren\r\n          </Button>\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            id=\"maloid\"\r\n            label=\"Malo-Id\"\r\n            value={this.state.value}\r\n            onChange={this.handleChange}\r\n            inputProps={{ inputMode: 'numeric', pattern: '[0-9]*' }}\r\n          />\r\n        </div>\r\n        {validityElement}\r\n        {!this.state.validity && (\r\n          <div className=\"messages\">\r\n            <ul>\r\n              \r\n              {messages.map((message) => (\r\n                <li> {message.message} </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </Stack>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(<Game />, document.getElementById(\"root\"));\r\n","/**\r\n * Berechnet die Prüfziffer aus den ersten 10 Stellen einer Malo-Id\r\n * @param {string} Die ersten 10 Stellen einer Malo-Id \r\n * @returns Die Prüfziffer\r\n * \r\n * Erklärung der Berechnung: https://www.bdew.de/media/documents/Awh_20170428_MaLo-ID_NyDa4vU.pdf\r\n *\tDie Prüfziffernberechnung erfolgt im „Lok- and Waggon-Kennzeichnungsverfahren“ nach folgendem Schema:\r\n *   a) Quersumme aller Ziffern in ungerader Position\r\n *   b) Quersumme aller Ziffern auf gerader Position multipliziert mit 2\r\n *   c) Summe von a) und b)\r\n *   d) Differenz von c) zum nächsten Vielfachen von 10 (ergibt sich hier 10, wird die Prüfziffer 0 genommen)\r\n * \r\n * Beispiel:\r\n * MaLo-ID: 4 1 3 7 3 5 5 9 2 4 Prüfziffer\r\n *  a) 4 + 3 + 3 + 5 + 2 = 17\r\n *  b) (1 + 7 + 5 + 9 + 4) * 2 = 52\r\n *  c) 17 + 52 = 69\r\n *  d) 70 - 69 = 1 -> Prüfziffer „1“\r\n * MaLo-ID: 4 1 3 7 3 5 5 9 2 4 1\r\n */\r\nvar berechnePZ = function(val) {\r\n    var erste10Positionen = val.split('').slice(0, 10);\r\n    var a = erste10Positionen.filter((x, i) => i % 2 === 0).reduce((pv, cv) => Number(pv) + Number(cv), 0);\r\n    var b = erste10Positionen.filter((x, i) => i % 2 === 1).reduce((pv, cv) => Number(pv) + Number(cv), 0) * 2;\r\n    var c = a + b;\r\n    var d = Math.min(c % 10, 10 - (c % 10));\r\n    return d;\r\n};\r\n\r\nvar isNumeric = function(val) {\r\n    return /^\\d*$/.test(val);\r\n};\r\n\r\nvar isLengthEleven = function(val) {\r\n    return val.length === 11;\r\n};\r\n\r\nvar isErsteZiffer1bis9 = function(val) {\r\n    return /[1-9]/.test(val[0]);\r\n};\r\n\r\nvar isPruefzifferKorrekt = function(val) {\r\n    return berechnePZ(val) === Number(val[10]);\r\n}\r\n\r\n/**\r\n * Checks, if a given Malo-Id is valid\r\n * @param {string} The Malo-Id to be checked \r\n * @returns {object} Whether the Malo-ID is valid or not, potentially error messages\r\n */\r\nvar checkMaloIdValid = function(val) {\r\n\r\n    var messages = [];\r\n\r\n    var isnum = isNumeric(val);\r\n\r\n    if (!isnum) {\r\n        messages.push({ message: \"Die Malo-Id darf nur aus Ziffern bestehen.\", messageCode: \"NUM\" })\r\n    }\r\n\r\n    var lengthIsEleven = isLengthEleven(val);\r\n    if (!lengthIsEleven) {\r\n        messages.push({ message: \"Die Malo-Id muss aus 11 Zeichen bestehen.\", messageCode: \"ELEVEN\" })\r\n    }\r\n\r\n    var ersteZiffer1bis9 = isErsteZiffer1bis9(val);\r\n    if (!ersteZiffer1bis9) {\r\n        messages.push({ message: \"Das erste Zeichen der Malo-Id muss eine Ziffer zwischen 1 und 9 sein.\", messageCode: \"FIRSTDIGIT\" })\r\n    }\r\n\r\n    if (messages.length > 0) {\r\n        return {\r\n            valid: false,\r\n            messages: messages\r\n        }\r\n    }\r\n\r\n    var pruefzifferKorrekt = isPruefzifferKorrekt(val);\r\n    if (!pruefzifferKorrekt) {\r\n        let korrektePruefziffer = berechnePZ(val);\r\n        messages.push({ message: `Falsche Prüfziffer. Korrekt wäre ${korrektePruefziffer}`, pruefziffer: korrektePruefziffer, messageCode: \"PRUEFZIFFER\" })\r\n    }\r\n\r\n    return {\r\n        valid: pruefzifferKorrekt,\r\n        messages: messages\r\n    }\r\n\r\n};\r\n\r\nvar generateRandomMaloId = function() {\r\n    var random = function(a, b) {\r\n        return Math.floor(Math.random() * b) + a;\r\n    }\r\n\r\n    var ersteZiffer = random(1, 9);\r\n\r\n    var maloId = \"\" + ersteZiffer;\r\n\r\n    for (let i = 0; i < 9; i++) {\r\n        maloId += random(0, 9);\r\n    }\r\n\r\n    maloId += berechnePZ(maloId);\r\n    return maloId;\r\n\r\n};\r\n\r\nmodule.exports.checkMaloIdValid = checkMaloIdValid;\r\nmodule.exports.generateRandomMaloId = generateRandomMaloId;"],"sourceRoot":""}